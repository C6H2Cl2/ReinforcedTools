package c6h2cl2.ReinforcedTools

import c6h2cl2.ReinforcedTools.client.ClientProxy
import c6h2cl2.ReinforcedTools.common.CommonProxy
import cpw.mods.fml.common.Mod
import cpw.mods.fml.common.ModMetadata
import cpw.mods.fml.common.SidedProxy
import cpw.mods.fml.common.event.FMLInitializationEvent
import cpw.mods.fml.common.event.FMLPreInitializationEvent
import net.minecraftforge.common.MinecraftForge
import net.minecraftforge.common.config.Configuration
import java.io.File

/**
 * @author C6H2Cl2
 */

@Mod(modid = MOD_ID, name = MOD_NAME, version = VERSION, dependencies = DEPENDENT, useMetadata = true)
class ReinforcedToolsCore {

    companion object {
        @Mod.Metadata
        lateinit var meta: ModMetadata
        @SidedProxy(clientSide = "c6h2cl2.ReinforcedTools.client.ClientProxy", serverSide = "c6h2cl2.ReinforcedTools.common.CommonProxy")
        var proxy: CommonProxy? = null
    }

    @Suppress("UNUSED")
    @Mod.EventHandler
    fun preinit(event: FMLPreInitializationEvent) {
        loadMeta()
        loadConfig()
        ReinforcedToolsRegistry.preInit(event)
    }

    @Mod.EventHandler
    fun init(event: FMLInitializationEvent) {
        ReinforcedToolsRegistry.init(event)
        if (event.side.isClient) {
            if (proxy is ClientProxy) {
                val clientProxy = ReinforcedToolsCore.proxy as ClientProxy
                clientProxy.registerRender()
            }
            //MinecraftForge.EVENT_BUS.register(FOVEvent())
        }
        MinecraftForge.EVENT_BUS.register(ReinforcedToolsEventHandler())
    }

    fun loadMeta() {
        meta.modId = MOD_ID
        meta.name = MOD_NAME
        meta.version = VERSION
        meta.authorList.add("C6H2Cl2")
        meta.description = "The Special Custom Version for Maple Server.\n 樹液鯖用の専用カスタム版ReinforcedTools。"
        meta.credits = "Support & Idea: ✞幻想魔法✞  Recipe & Idea: tonby"
        meta.autogenerated = false
    }

    fun loadConfig() {
        val proxy = proxy as CommonProxy
        val cfg = Configuration(File(proxy.getDir(), "config/ReinforcedTools.cfg"))
        cfg.load()
        val recipeType = cfg.getInt("Recipe Difficulty", "Recipes", 0, 0, 2, "The Difficulty of all recipes in this mod.")
        RecipeDifficulty = EnumRecipeType.values()[recipeType]
        if (cfg.hasChanged()) {
            cfg.save()
        }
    }
}